local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=2 -1 ;local v30;v27=v12(v11(v27,14 -9 ),v7("\89\105","\56\119\71\148"),function(v42) if (v9(v42,3 -1 )==79) then local v103=0;while true do if (v103==0) then v30=v8(v11(v42,2 -1 ,1));return "";end end else local v104=v10(v8(v42,16));if v30 then local v116=0;local v117;while true do if (v116==0) then v117=v13(v104,v30);v30=nil;v116=1;end if (v116==1) then return v117;end end else return v104;end end end);local function v31(v43,v44,v45) if v45 then local v105=0;local v106;while true do if (v105==0) then v106=(v43/(2^(v44-1)))%((621 -(555 + 64))^(((v45-1) -(v44-1)) + 1)) ;return v106-(v106%(932 -(857 + 74))) ;end end else local v107=0;local v108;while true do if (v107==0) then v108=2^(v44-1) ;return (((v43%(v108 + v108))>=v108) and 1) or 0 ;end end end end local function v32() local v46=0;local v47;while true do if (v46==1) then return v47;end if (v46==0) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end end end local function v33() local v48=0;local v49;local v50;while true do if (v48==0) then v49,v50=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;v48=1;end if (1==v48) then return (v50 * 256) + v49 ;end end end local function v34() local v51=0;local v52;local v53;local v54;local v55;while true do if (v51==1) then return (v55 * 16777216) + (v54 * 65536) + (v53 * 256) + v52 ;end if (v51==0) then v52,v53,v54,v55=v9(v27,v29,v29 + 3 );v29=v29 + (572 -(367 + 201)) ;v51=1;end end end local function v35() local v56=0;local v57;local v58;local v59;local v60;local v61;local v62;while true do if (v56==0) then v57=v34();v58=v34();v56=1;end if (v56==2) then v61=v31(v58,21,31);v62=((v31(v58,32)==1) and  -1) or 1 ;v56=3;end if (v56==1) then v59=1;v60=(v31(v58,1,20) * (2^32)) + v57 ;v56=2;end if (v56==3) then if (v61==0) then if (v60==0) then return v62 * 0 ;else local v126=0;while true do if (v126==0) then v61=928 -(214 + 713) ;v59=0 + 0 ;break;end end end elseif (v61==2047) then return ((v60==0) and (v62 * ((1 + 0)/0))) or (v62 * NaN) ;end return v16(v62,v61-1023 ) * (v59 + (v60/(2^52))) ;end end end local function v36(v63) local v64;if  not v63 then local v109=0;while true do if (0==v109) then v63=v34();if (v63==(877 -(282 + 595))) then return "";end break;end end end v64=v11(v27,v29,(v29 + v63) -1 );v29=v29 + v63 ;local v65={};for v79=1, #v64 do v65[v79]=v10(v9(v11(v64,v79,v79)));end return v14(v65);end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v66={};local v67={};local v68={};local v69={v66,v67,nil,v68};local v70=v34();local v71={};for v81=1,v70 do local v82=0;local v83;local v84;while true do if (v82==0) then v83=v32();v84=nil;v82=1;end if (1==v82) then if (v83==1) then v84=v32()~=0 ;elseif (v83==2) then v84=v35();elseif (v83==3) then v84=v36();end v71[v81]=v84;break;end end end v69[3]=v32();for v85=1,v34() do local v86=v32();if (v31(v86,1,1)==0) then local v112=0;local v113;local v114;local v115;while true do if (v112==2) then if (v31(v114,1,1)==1) then v115[1067 -(68 + 997) ]=v71[v115[2]];end if (v31(v114,1272 -(226 + 1044) ,2)==(4 -3)) then v115[3]=v71[v115[3]];end v112=3;end if (v112==3) then if (v31(v114,3,3)==1) then v115[4]=v71[v115[4]];end v66[v85]=v115;break;end if (v112==1) then v115={v33(),v33(),nil,nil};if (v113==0) then local v133=0;while true do if (v133==0) then v115[3]=v33();v115[4]=v33();break;end end elseif (v113==1) then v115[3 + 0 ]=v34();elseif (v113==2) then v115[3]=v34() -(2^16) ;elseif (v113==3) then local v138=0;while true do if (v138==0) then v115[3]=v34() -((2 -0)^16) ;v115[4]=v33();break;end end end v112=2;end if (0==v112) then v113=v31(v86,2,3);v114=v31(v86,4,6);v112=1;end end end end for v87=1,v34() do v67[v87-1 ]=v39();end return v69;end local function v40(v73,v74,v75) local v76=v73[118 -(32 + 85) ];local v77=v73[2];local v78=v73[3 + 0 ];return function(...) local v89=v76;local v90=v77;local v91=v78;local v92=v38;local v93=1;local v94= -1;local v95={};local v96={...};local v97=v20("#",...) -1 ;local v98={};local v99={};for v110=0,v97 do if (v110>=v91) then v95[v110-v91 ]=v96[v110 + 1 ];else v99[v110]=v96[v110 + 1 + 0 ];end end local v100=(v97-v91) + 1 ;local v101;local v102;while true do local v111=0;while true do if (v111==0) then v101=v89[v93];v102=v101[1];v111=1;end if (v111==1) then if (v102<=58) then if (v102<=28) then if (v102<=13) then if (v102<=6) then if (v102<=2) then if (v102<=0) then v99[v101[2]]=v101[3] + v99[v101[4]] ;elseif (v102>1) then v99[v101[2]]=v99[v101[3]] -v99[v101[4]] ;else local v161=v101[2];local v162,v163=v92(v99[v161](v99[v161 + 1 ]));v94=(v163 + v161) -1 ;local v164=0;for v352=v161,v94 do local v353=0;while true do if (v353==0) then v164=v164 + 1 ;v99[v352]=v162[v164];break;end end end end elseif (v102<=4) then if (v102>3) then local v165=0;local v166;while true do if (0==v165) then v166=v101[2];v99[v166]=v99[v166](v21(v99,v166 + 1 ,v94));break;end end else v99[v101[2]]=v40(v90[v101[3]],nil,v75);end elseif (v102==5) then local v168=v101[2];do return v99[v168](v21(v99,v168 + 1 ,v101[3]));end else v99[v101[2]]=v74[v101[960 -(892 + 65) ]];end elseif (v102<=(21 -12)) then if (v102<=7) then local v142=0;local v143;local v144;while true do if (v142==0) then v143=v101[2];v144={};v142=1;end if (v142==1) then for v381=1, #v98 do local v382=0;local v383;while true do if (v382==0) then v383=v98[v381];for v528=0, #v383 do local v529=0;local v530;local v531;local v532;while true do if (0==v529) then v530=v383[v528];v531=v530[1];v529=1;end if (v529==1) then v532=v530[2];if ((v531==v99) and (v532>=v143)) then local v581=0;while true do if (v581==0) then v144[v532]=v531[v532];v530[1]=v144;break;end end end break;end end end break;end end end break;end end elseif (v102>8) then local v171=0;local v172;while true do if (v171==0) then v172=v101[2];do return v99[v172](v21(v99,v172 + 1 ,v94));end break;end end elseif (v101[3 -1 ]==v99[v101[4]]) then v93=v93 + (1 -0) ;else v93=v101[3];end elseif (v102<=11) then if (v102==10) then v99[v101[2]]=v99[v101[3]] * v99[v101[4]] ;else local v174=0;local v175;local v176;local v177;while true do if (v174==0) then v175=v101[352 -(87 + 263) ];v176=v99[v175 + 2 ];v174=1;end if (v174==1) then v177=v99[v175] + v176 ;v99[v175]=v177;v174=2;end if (2==v174) then if (v176>0) then if (v177<=v99[v175 + 1 ]) then local v535=0;while true do if (v535==0) then v93=v101[3];v99[v175 + 3 ]=v177;break;end end end elseif (v177>=v99[v175 + 1 ]) then local v536=0;while true do if (v536==0) then v93=v101[3];v99[v175 + 3 ]=v177;break;end end end break;end end end elseif (v102>12) then v93=v101[3];else for v355=v101[2],v101[3] do v99[v355]=nil;end end elseif (v102<=20) then if (v102<=(196 -(67 + 113))) then if (v102<=(11 + 3)) then local v145=0;local v146;local v147;local v148;while true do if (v145==0) then v146=v101[2];v147={v99[v146](v21(v99,v146 + 1 ,v94))};v145=1;end if (v145==1) then v148=0;for v385=v146,v101[4] do local v386=0;while true do if (v386==0) then v148=v148 + 1 ;v99[v385]=v147[v148];break;end end end break;end end elseif (v102>15) then v99[v101[2]]=v101[3]~=0 ;else local v180=0;local v181;local v182;local v183;local v184;while true do if (v180==1) then v94=(v183 + v181) -1 ;v184=0;v180=2;end if (2==v180) then for v469=v181,v94 do v184=v184 + 1 ;v99[v469]=v182[v184];end break;end if (v180==0) then v181=v101[2];v182,v183=v92(v99[v181](v21(v99,v181 + 1 ,v101[3])));v180=1;end end end elseif (v102<=18) then if (v102==17) then local v185=v90[v101[3]];local v186;local v187={};v186=v18({},{[v7("\208\103\223\253\235\93\206","\147\143\56\182")]=function(v358,v359) local v360=0;local v361;while true do if (v360==0) then v361=v187[v359];return v361[1][v361[2]];end end end,[v7("\224\233\143\250\62\214\216\133\250\49","\73\191\182\225\159")]=function(v362,v363,v364) local v365=0;local v366;while true do if (v365==0) then v366=v187[v363];v366[1][v366[2]]=v364;break;end end end});for v367=1,v101[4] do local v368=0;local v369;while true do if (v368==0) then v93=v93 + 1 ;v369=v89[v93];v368=1;end if (1==v368) then if (v369[1]==43) then v187[v367-1 ]={v99,v369[3]};else v187[v367-(2 -1) ]={v74,v369[3 + 0 ]};end v98[ #v98 + 1 ]=v187;break;end end end v99[v101[2]]=v40(v185,v186,v75);elseif (v101[2]<v99[v101[4]]) then v93=v93 + 1 ;else v93=v101[3];end elseif (v102==(75 -56)) then if  not v99[v101[2]] then v93=v93 + 1 ;else v93=v101[3];end else local v189=0;local v190;local v191;while true do if (v189==1) then for v477=1, #v98 do local v478=0;local v479;while true do if (v478==0) then v479=v98[v477];for v563=0, #v479 do local v564=0;local v565;local v566;local v567;while true do if (0==v564) then v565=v479[v563];v566=v565[1];v564=1;end if (v564==1) then v567=v565[2];if ((v566==v99) and (v567>=v190)) then local v585=0;while true do if (v585==0) then v191[v567]=v566[v567];v565[1]=v191;break;end end end break;end end end break;end end end break;end if (v189==0) then v190=v101[2];v191={};v189=1;end end end elseif (v102<=24) then if (v102<=22) then if (v102==21) then do return v99[v101[2]]();end else v99[v101[2]]=v99[v101[3]][v99[v101[4]]];end elseif (v102==23) then if (v101[2]<v99[v101[4]]) then v93=v93 + (953 -(802 + 150)) ;else v93=v101[7 -4 ];end else v99[v101[2]]=v99[v101[3]][v99[v101[4]]];end elseif (v102<=26) then if (v102>25) then local v196=v101[2];v99[v196]=v99[v196](v21(v99,v196 + 1 ,v94));else local v198=0;local v199;local v200;local v201;while true do if (v198==0) then v199=v101[2];v200=v99[v199];v198=1;end if (v198==1) then v201=v101[3];for v480=1,v201 do v200[v480]=v99[v199 + v480 ];end break;end end end elseif (v102==27) then local v202=0;local v203;local v204;local v205;while true do if (v202==1) then v205=v99[v203 + 2 ];if (v205>0) then if (v204>v99[v203 + 1 ]) then v93=v101[5 -2 ];else v99[v203 + 3 ]=v204;end elseif (v204<v99[v203 + 1 ]) then v93=v101[3];else v99[v203 + 3 ]=v204;end break;end if (v202==0) then v203=v101[2];v204=v99[v203];v202=1;end end else local v206=v101[2];v99[v206](v21(v99,v206 + 1 ,v94));end elseif (v102<=43) then if (v102<=35) then if (v102<=31) then if (v102<=(22 + 7)) then v99[v101[2]]=v99[v101[3]][v101[4]];elseif (v102>30) then local v207=0;local v208;while true do if (0==v207) then v208=v101[2];v99[v208](v99[v208 + 1 ]);break;end end else local v209=0;local v210;while true do if (v209==0) then v210=v101[2];v99[v210]=v99[v210]();break;end end end elseif (v102<=33) then if (v102>32) then v99[v101[2]]=v101[3]~=0 ;else local v212=0;local v213;while true do if (0==v212) then v213=v101[2];v99[v213](v21(v99,v213 + 1 ,v101[3]));break;end end end elseif (v102==34) then local v214=0;local v215;while true do if (v214==0) then v215=v101[2];v99[v215]=v99[v215](v99[v215 + 1 ]);break;end end else v74[v101[3]]=v99[v101[2]];end elseif (v102<=(1036 -(915 + 82))) then if (v102<=(104 -67)) then if (v102==36) then v99[v101[2 + 0 ]]=v99[v101[3]] + v101[4] ;else v93=v101[3];end elseif (v102==38) then v99[v101[2]]=v99[v101[3]] * v101[4] ;else v99[v101[2]]=v99[v101[3]]%v101[4] ;end elseif (v102<=41) then if (v102>40) then v99[v101[2]]=v99[v101[3]]%v99[v101[4]] ;else local v223=0;local v224;local v225;local v226;while true do if (v223==0) then v224=v101[2];v225={v99[v224](v21(v99,v224 + 1 ,v94))};v223=1;end if (v223==1) then v226=0;for v483=v224,v101[4] do v226=v226 + (1 -0) ;v99[v483]=v225[v226];end break;end end end elseif (v102>42) then v99[v101[2]]=v99[v101[3]];else do return;end end elseif (v102<=50) then if (v102<=46) then if (v102<=44) then v99[v101[1189 -(1069 + 118) ]]=v99[v101[3]][v101[4]];elseif (v102==45) then v99[v101[2]]=v75[v101[3]];else local v231=0;local v232;local v233;local v234;while true do if (v231==2) then if (v233>0) then if (v234<=v99[v232 + 1 ]) then local v542=0;while true do if (v542==0) then v93=v101[3];v99[v232 + 3 ]=v234;break;end end end elseif (v234>=v99[v232 + 1 ]) then local v543=0;while true do if (v543==0) then v93=v101[3];v99[v232 + 3 ]=v234;break;end end end break;end if (v231==0) then v232=v101[2];v233=v99[v232 + 2 ];v231=1;end if (1==v231) then v234=v99[v232] + v233 ;v99[v232]=v234;v231=2;end end end elseif (v102<=(108 -60)) then if (v102==47) then v99[v101[2]]= #v99[v101[3]];else local v236=0;local v237;while true do if (v236==0) then v237=v101[2];v99[v237]=v99[v237](v21(v99,v237 + 1 ,v101[3]));break;end end end elseif (v102==(106 -57)) then v74[v101[3]]=v99[v101[2]];else v99[v101[2]]=v99[v101[3]];end elseif (v102<=54) then if (v102<=52) then if (v102==(9 + 42)) then local v242=0;local v243;while true do if (v242==0) then v243=v101[2];v99[v243](v99[v243 + 1 ]);break;end end else local v244=0;local v245;local v246;local v247;local v248;while true do if (v244==1) then v94=(v247 + v245) -1 ;v248=0;v244=2;end if (v244==0) then v245=v101[2];v246,v247=v92(v99[v245](v21(v99,v245 + 1 ,v94)));v244=1;end if (v244==2) then for v486=v245,v94 do v248=v248 + 1 ;v99[v486]=v246[v248];end break;end end end elseif (v102>(93 -40)) then v99[v101[2]][v101[3]]=v99[v101[4]];else local v251=0;local v252;while true do if (v251==0) then v252=v101[2 + 0 ];v99[v252]=v99[v252](v21(v99,v252 + 1 ,v101[3]));break;end end end elseif (v102<=(847 -(368 + 423))) then if (v102==55) then local v253=v101[2];local v254=v99[v253];for v370=v253 + 1 ,v94 do v15(v254,v99[v370]);end else local v255=v101[2];v99[v255]=v99[v255](v99[v255 + 1 ]);end elseif (v102==57) then local v257=0;local v258;local v259;while true do if (v257==1) then for v489=v258 + (19 -(10 + 8)) ,v94 do v15(v259,v99[v489]);end break;end if (v257==0) then v258=v101[6 -4 ];v259=v99[v258];v257=1;end end else v99[v101[2]]=v101[3];end elseif (v102<=(334 -247)) then if (v102<=72) then if (v102<=(507 -(416 + 26))) then if (v102<=61) then if (v102<=59) then v99[v101[2]]=v74[v101[3]];elseif (v102>60) then if (v99[v101[2]]~=v99[v101[4]]) then v93=v93 + 1 ;else v93=v101[3];end else local v262=0;local v263;local v264;local v265;while true do if (v262==1) then v265=v99[v263 + 1 + 1 ];if (v265>0) then if (v264>v99[v263 + 1 ]) then v93=v101[4 -1 ];else v99[v263 + 3 ]=v264;end elseif (v264<v99[v263 + 1 ]) then v93=v101[3];else v99[v263 + (441 -(145 + 293)) ]=v264;end break;end if (v262==0) then v263=v101[6 -4 ];v264=v99[v263];v262=1;end end end elseif (v102<=63) then if (v102>62) then local v266=v101[2];local v267=v101[4];local v268=v266 + 2 ;local v269={v99[v266](v99[v266 + 1 ],v99[v268])};for v371=1,v267 do v99[v268 + v371 ]=v269[v371];end local v270=v269[1];if v270 then v99[v268]=v270;v93=v101[3];else v93=v93 + (1487 -(998 + 488)) ;end else v99[v101[2]][v101[3]]=v101[4];end elseif (v102==64) then local v273=0;local v274;local v275;local v276;while true do if (1==v273) then v276={};v275=v18({},{[v7("\253\20\27\204\198\46\10","\162\162\75\114")]=function(v490,v491) local v492=0;local v493;while true do if (v492==0) then v493=v276[v491];return v493[1][v493[2]];end end end,[v7("\180\184\26\7\66\130\137\16\7\77","\53\235\231\116\98")]=function(v494,v495,v496) local v497=0;local v498;while true do if (v497==0) then v498=v276[v495];v498[1][v498[2]]=v496;break;end end end});v273=2;end if (v273==0) then v274=v90[v101[3]];v275=nil;v273=1;end if (v273==2) then for v499=1,v101[2 + 2 ] do local v500=0;local v501;while true do if (v500==1) then if (v501[1]==43) then v276[v499-(1 + 0) ]={v99,v501[3]};else v276[v499-1 ]={v74,v501[3]};end v98[ #v98 + 1 ]=v276;break;end if (v500==0) then v93=v93 + 1 ;v501=v89[v93];v500=1;end end end v99[v101[2]]=v40(v274,v275,v75);break;end end else v99[v101[2]]=v99[v101[3]] + v101[4] ;end elseif (v102<=(283 -215)) then if (v102<=66) then local v155=0;local v156;while true do if (0==v155) then v156=v101[2];v99[v156](v21(v99,v156 + 1 ,v101[3]));break;end end elseif (v102==67) then v99[v101[2]]=v101[3] + v99[v101[4]] ;else v99[v101[2]]();end elseif (v102<=70) then if (v102>(41 + 28)) then v99[v101[2]][v101[3]]=v101[14 -10 ];else do return;end end elseif (v102>71) then if (v101[7 -5 ]==v99[v101[863 -(814 + 45) ]]) then v93=v93 + 1 ;else v93=v101[3];end else local v281=0;local v282;while true do if (v281==0) then v282=v101[2];v99[v282](v21(v99,v282 + 1 ,v94));break;end end end elseif (v102<=(194 -115)) then if (v102<=75) then if (v102<=(4 + 69)) then local v157=v101[2];do return v21(v99,v157,v157 + v101[3] );end elseif (v102==(27 + 47)) then v99[v101[887 -(261 + 624) ]]();else local v283=v101[2];v99[v283]=v99[v283]();end elseif (v102<=77) then if (v102==76) then v99[v101[2]][v101[4 -1 ]]=v99[v101[4]];else local v287=v101[2];local v288=v101[4];local v289=v287 + 2 ;local v290={v99[v287](v99[v287 + 1 ],v99[v289])};for v375=1,v288 do v99[v289 + v375 ]=v290[v375];end local v291=v290[1];if v291 then local v394=0;while true do if (v394==0) then v99[v289]=v291;v93=v101[3];break;end end else v93=v93 + 1 ;end end elseif (v102>78) then if (v99[v101[2]]==v99[v101[4]]) then v93=v93 + 1 ;else v93=v101[3];end else local v292=0;local v293;while true do if (v292==0) then v293=v101[2];v94=(v293 + v100) -1 ;v292=1;end if (1==v292) then for v502=v293,v94 do local v503=v95[v502-v293 ];v99[v502]=v503;end break;end end end elseif (v102<=83) then if (v102<=81) then if (v102==80) then do return v99[v101[2]];end else v99[v101[2]]=v99[v101[3]] * v99[v101[4]] ;end elseif (v102==82) then local v295=0;local v296;local v297;local v298;local v299;while true do if (v295==2) then for v505=v296,v94 do local v506=0;while true do if (v506==0) then v299=v299 + 1 ;v99[v505]=v297[v299];break;end end end break;end if (v295==1) then v94=(v298 + v296) -1 ;v299=0;v295=2;end if (v295==0) then v296=v101[2];v297,v298=v92(v99[v296](v21(v99,v296 + 1 ,v101[3])));v295=1;end end else local v300=0;local v301;local v302;local v303;local v304;while true do if (v300==0) then v301=v101[2];v302,v303=v92(v99[v301](v99[v301 + 1 ]));v300=1;end if (v300==2) then for v507=v301,v94 do local v508=0;while true do if (v508==0) then v304=v304 + 1 ;v99[v507]=v302[v304];break;end end end break;end if (v300==1) then v94=(v303 + v301) -1 ;v304=0;v300=2;end end end elseif (v102<=85) then if (v102==84) then local v305=0;local v306;local v307;while true do if (v305==0) then v306=v101[2];v307=v99[v101[3]];v305=1;end if (v305==1) then v99[v306 + 1 ]=v307;v99[v306]=v307[v101[4]];break;end end else v99[v101[2]]={};end elseif (v102==86) then v99[v101[2]]=v40(v90[v101[3]],nil,v75);else v99[v101[2]]=v75[v101[3]];end elseif (v102<=102) then if (v102<=94) then if (v102<=90) then if (v102<=88) then local v158=0;local v159;while true do if (v158==0) then v159=v101[2];do return v99[v159](v21(v99,v159 + 1 ,v101[3]));end break;end end elseif (v102>89) then local v312=0;local v313;local v314;while true do if (v312==0) then v313=v101[2];v314=v99[v313];v312=1;end if (v312==1) then for v509=v313 + 1 ,v101[3] do v15(v314,v99[v509]);end break;end end else local v315=0;local v316;while true do if (v315==0) then v316=v101[2];do return v99[v316](v21(v99,v316 + 1 ,v94));end break;end end end elseif (v102<=92) then if (v102>91) then local v317=0;local v318;local v319;local v320;local v321;while true do if (v317==0) then v318=v101[2];v319,v320=v92(v99[v318](v21(v99,v318 + 1 ,v94)));v317=1;end if (v317==2) then for v510=v318,v94 do local v511=0;while true do if (v511==0) then v321=v321 + 1 ;v99[v510]=v319[v321];break;end end end break;end if (v317==1) then v94=(v320 + v318) -1 ;v321=0;v317=2;end end elseif (v99[v101[2]]==v101[4]) then v93=v93 + 1 ;else v93=v101[1083 -(1020 + 60) ];end elseif (v102==(1516 -(630 + 793))) then v99[v101[2]]={};else local v323=0;local v324;while true do if (v323==0) then v324=v101[2];do return v21(v99,v324,v94);end break;end end end elseif (v102<=98) then if (v102<=96) then if (v102>95) then local v325=0;local v326;local v327;while true do if (v325==0) then v326=v101[2];v327=v99[v101[3]];v325=1;end if (v325==1) then v99[v326 + 1 ]=v327;v99[v326]=v327[v101[4]];break;end end else local v328=0;local v329;local v330;local v331;while true do if (v328==0) then v329=v101[2];v330=v99[v329];v328=1;end if (v328==1) then v331=v101[3];for v512=1,v331 do v330[v512]=v99[v329 + v512 ];end break;end end end elseif (v102>97) then v99[v101[2]]=v99[v101[3]] * v101[13 -9 ] ;elseif (v99[v101[2]]==v101[4]) then v93=v93 + 1 ;else v93=v101[3];end elseif (v102<=(473 -373)) then if (v102==99) then local v333=0;local v334;local v335;local v336;while true do if (v333==0) then v334=v101[2];v335={v99[v334](v99[v334 + 1 ])};v333=1;end if (v333==1) then v336=0 -0 ;for v515=v334,v101[4] do local v516=0;while true do if (v516==0) then v336=v336 + 1 ;v99[v515]=v335[v336];break;end end end break;end end elseif v99[v101[2]] then v93=v93 + 1 ;else v93=v101[3];end elseif (v102==(1848 -(760 + 987))) then for v379=v101[2],v101[3] do v99[v379]=nil;end elseif (v99[v101[2]]<v99[v101[4]]) then v93=v93 + 1 ;else v93=v101[3];end elseif (v102<=(2022 -(1789 + 124))) then if (v102<=105) then if (v102<=103) then if (v99[v101[2]]==v99[v101[4]]) then v93=v93 + 1 ;else v93=v101[3];end elseif (v102==104) then if  not v99[v101[2]] then v93=v93 + 1 ;else v93=v101[3];end else do return v99[v101[2]]();end end elseif (v102<=107) then if (v102==106) then local v338=0;local v339;while true do if (v338==0) then v339=v101[2];v94=(v339 + v100) -1 ;v338=1;end if (v338==1) then for v517=v339,v94 do local v518=0;local v519;while true do if (v518==0) then v519=v95[v517-v339 ];v99[v517]=v519;break;end end end break;end end else v99[v101[2]]=v99[v101[3]] -v99[v101[4]] ;end elseif (v102==108) then local v341=0;local v342;while true do if (v341==0) then v342=v101[768 -(745 + 21) ];do return v21(v99,v342,v94);end break;end end elseif v99[v101[1 + 1 ]] then v93=v93 + 1 ;else v93=v101[7 -4 ];end elseif (v102<=113) then if (v102<=111) then if (v102==110) then do return v99[v101[2]];end else local v343=0;local v344;local v345;local v346;while true do if (1==v343) then v346=0;for v520=v344,v101[4] do v346=v346 + 1 ;v99[v520]=v345[v346];end break;end if (v343==0) then v344=v101[7 -5 ];v345={v99[v344](v99[v344 + 1 ])};v343=1;end end end elseif (v102>(1 + 111)) then v99[v101[2]]=v99[v101[3]]%v101[4 + 0 ] ;elseif (v99[v101[2]]~=v99[v101[1059 -(87 + 968) ]]) then v93=v93 + 1 ;else v93=v101[3];end elseif (v102<=115) then if (v102==114) then if (v99[v101[2]]<v99[v101[4]]) then v93=v93 + 1 ;else v93=v101[3];end else v99[v101[8 -6 ]]= #v99[v101[3 + 0 ]];end elseif (v102>116) then v99[v101[2]]=v99[v101[3]]%v99[v101[4]] ;else v99[v101[2]]=v101[3];end v93=v93 + 1 ;break;end end end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
-- â ï¸ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--
